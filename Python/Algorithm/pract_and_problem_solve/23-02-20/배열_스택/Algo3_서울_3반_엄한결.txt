# 문제 3 : 스택

'''
(1)
괄호가 정상적으로 표시 되어 있는지 검사할때 스택을 이용하면 간단하게 해결할 수 있다

1. 문자열의 char을 하나하나 확인할때 '(' 라면 스택에 넣어주고(push)
2. ')' 라면 stack에서 가장 최근에 들어간(후입선출) '(' 하나를 제거해준다(pop)

이를 문자열 끝까지 수행한 후 오류가 발생한적 없고 스택이 비어 있다면 괄호가 정상적으로 표시되어 있는 것이고

문자열 끝까지 수행한 후 스택이 비어있지 않거나
스택이 비어있는데 ')'가 나와서 pop을 해줘서 오류가 발생한다면 괄호가 정상적으로 표시되어 있지 않다는 것이다.
'''

# 코드를 통해 확인해보자
# 직관적인 설명을 위해 리스트의 함수인 append와 pop을 사용할 것이다.

# 문제의 예시처럼 괄호 검사를 하고 싶은 소괄호를 포함한 문자열 a가 있다
a = 'if((i==0)&&(j==0)))'

def check(a):
    '''
    괄호가 정상적으로 표시되어 있는지 검사하는 함수

    :param a: 괄호검사를 할 문자열
    :return: 정상적으로 표시되어있으면 1 반환 / 표시 오류이면 -1 반환
    '''

    # a 문자열의 char을 하나하나씩 반복문으로 살펴볼 것이다
    # 먼저 비어있는 stack을 만들어주고
    stack = []

    # 반복문을 통해 하나 하나 확인 해볼 것이다.
    for char in a:
        # 지금 가져온 char이 '(' 라면 stack에 char('(')을 push해준다
        if char == '(':
            stack.append(char) # 여는 괄호를 push
            print(f'{stack} # 여는 괄호를 만나 push')

        # 지금 가져온 char이 ')' 라면 stack에서 가장 최근에 들어간(후입선출) '('를 꺼낸다.
        elif char == ')':
            # 현재 파이썬의 list.pop을 사용해 구현 중인데
            # list.pop은 list가 비어 있으면 오류가 발생하므로 try/ except를 사용하겠다.
            try:
                stack.pop() # 스택에서 가장 최근에 들어간 여는괄호를 pop
                print(f'{stack} # 닫는 괄호를 만나 pop')

            except: # 스택이 비어 있는데 pop을 실행해서 error가 발생하는 경우
                print('stack이 비어있습니다!')
                return f'-1 (괄호 표시 오류 / 닫는괄호가 더 많음)'

    # 문자열 전체를 모두 확인하고 에러가 발생하지 않았다면
    if stack: # 스택이 비어있지 않다면
        print('stack이 비어있지않습니다!')
        return f'-1 (괄호 표시 오류 / 여는괄호가 더 많음)'
    else:
        return f'1 (괄호 표시가 잘 되어있습니다.)'

print(check(a))

'''
결과 :

['('] # 여는 괄호를 만나 push
['(', '('] # 여는 괄호를 만나 push
['('] # 닫는 괄호를 만나 pop
['(', '('] # 여는 괄호를 만나 push
['('] # 닫는 괄호를 만나 pop
[] # 닫는 괄호를 만나 pop
stack이 비어있습니다!
-1 (괄호 표시 오류 / 닫는괄호가 더 많음)
'''


# (2)
'''
['('] # 여는 괄호를 만나 push
['(', '('] # 여는 괄호를 만나 push
['('] # 닫는 괄호를 만나 pop
['(', '('] # 여는 괄호를 만나 push
['('] # 닫는 괄호를 만나 pop
[] # 닫는 괄호를 만나 pop
stack이 비어있습니다!
-1 (괄호 표시 오류 / 닫는괄호가 더 많음)
'''

'''
a = 'if((i==0)&&(j==0)))'

(1)에서 만든 함수에 a를 넣어서 실행해보면
닫는 괄호가 더 많기 때문에
마지막의 닫는 괄호에서
비어있는 stack에 pop을 하게된다.

하지만 비어있는 스택에서 pop을 할 수 없으므로
오류가 발생한다.
따라서 현재 a의 괄호표기는 오류이다.
'''